name: 'Run Command with Metrics'
description: 'Run a command and capture its output, exit code, and duration'

inputs:
  command:
    description: 'The command to run'
    required: true

outputs:
  output:
    description: 'Full command output (stdout + stderr)'
    value: ${{ steps.run-command.outputs.output }}
  stdout:
    description: 'Command stdout'
    value: ${{ steps.run-command.outputs.stdout }}
  stderr:
    description: 'Command stderr'
    value: ${{ steps.run-command.outputs.stderr }}
  exit-code:
    description: 'Command exit code'
    value: ${{ steps.run-command.outputs.exit-code }}
  duration:
    description: 'Time the command took to run, in seconds'
    value: ${{ steps.run-command.outputs.duration }}

runs:
  using: 'composite'
  steps:
    - name: Run Command with Metrics
      id: run-command
      shell: bash
      run: |
        # Start timing
        start_time=$(date +%s.%N)
        
        # Run the command and capture all outputs
        set +e  # Disable immediate exit on error
        output=$(bash -c "${{ inputs.command }}" 2>&1)
        exit_code=$?
        
        # End timing and calculate duration
        end_time=$(date +%s.%N)
        duration=$(echo "$end_time - $start_time" | bc)
        
        # Separate stdout and stderr
        stdout=$(echo "$output" | grep -v '^ERROR:' || true)
        stderr=$(echo "$output" | grep '^ERROR:' || true)
        
        # Set outputs
        echo "output<<EOF" >> $GITHUB_OUTPUT
        echo "$output" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        echo "stdout<<EOF" >> $GITHUB_OUTPUT
        echo "$stdout" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        echo "stderr<<EOF" >> $GITHUB_OUTPUT
        echo "$stderr" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        echo "exit-code=$exit_code" >> $GITHUB_OUTPUT
        echo "duration=$duration" >> $GITHUB_OUTPUT
